# Create a new GitHub Action workflow that recursively scans all .md files and logs which ones it processes
recursive_workflow_content = """
name: Update Script Index

on:
  push:
    paths:
      - '**/*.md'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install js-yaml

      - name: Generate Script Index (Recursive)
        run: |
          node <<'EOF'
          const fs = require('fs');
          const path = require('path');
          const yaml = require('js-yaml');

          function getAllMarkdownFiles(dirPath, arrayOfFiles = []) {
            const files = fs.readdirSync(dirPath);
            files.forEach(function(file) {
              const fullPath = path.join(dirPath, file);
              if (fs.statSync(fullPath).isDirectory()) {
                arrayOfFiles = getAllMarkdownFiles(fullPath, arrayOfFiles);
              } else if (file.endsWith('.md') && file !== 'README.md') {
                arrayOfFiles.push(fullPath);
              }
            });
            return arrayOfFiles;
          }

          const readmePath = path.join(__dirname, 'README.md');
          const markdownFiles = getAllMarkdownFiles(__dirname);

          console.log("‚úÖ Found markdown files:");
          markdownFiles.forEach(f => console.log(" -", f));

          const rows = markdownFiles.map(filePath => {
            const content = fs.readFileSync(filePath, 'utf8');
            const match = content.match(/^---\\n([\\s\\S]*?)\\n---/);
            let title = '(No Title)';
            let description = '';
            if (match) {
              try {
                const frontmatter = yaml.load(match[1]);
                if (frontmatter?.title) title = frontmatter.title;
                if (frontmatter?.description) description = frontmatter.description;
              } catch (err) {
                console.error("‚ö†Ô∏è YAML error in", filePath, ":", err.message);
              }
            }
            const fileName = path.relative(__dirname, filePath).replace(/\\\\/g, '/');
            return `| [${fileName}](./${fileName}) | ${description || title} |`;
          });

          const tableHeader = "| Script Name | Description |\\n|-------------|-------------|";
          const table = [tableHeader, ...rows].join('\\n');

          const readme = fs.readFileSync(readmePath, 'utf8');
          const updatedReadme = readme.replace(
            /<!-- script-list-start -->[\\s\\S]*<!-- script-list-end -->/,
            `<!-- script-list-start -->\\n${table}\\n<!-- script-list-end -->`
          ).replace(
            /<!-- updated-badge-start -->[\\s\\S]*?<!-- updated-badge-end -->/,
            `<!-- updated-badge-start -->\\n![Last Updated](https://img.shields.io/github/last-commit/${process.env.GITHUB_REPOSITORY}?label=Last%20Updated)\\n<!-- updated-badge-end -->`
          );

          fs.writeFileSync(readmePath, updatedReadme);
          EOF

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add README.md
          git commit -m 'üìú Auto-update script index and badge (recursive scan)' || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push
"""

# Save the updated workflow
recursive_workflow_path = Path("/mnt/data/update-readme.yml")
recursive_workflow_path.write_text(recursive_workflow_content)

recursive_workflow_path.name
